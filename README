

OSS/user_proc
	OSS simulates resource allocation and deadlock prevention in an operating system. It generates 20 resource descriptors,
15-25% of which are shareable, and each of which have 1-10 instances. It then fork-execs instances of user_proc, up to 18 at a time,
every 1-500ms (simulated time), until 40 total have been spawned or 5 real life seconds have passed.
	Each instance of user_proc generates a maximum need for each resource in the range [0, instances], then either requests or 
releases resources every 1-250ms until it decides to terminate. It communicates requests/releases/termination to OSS via a message
queue, and concurrency is managed with semaphores.
	Upon receipt of a request, OSS runs both the banker's algorithm and deadlock detection algorithm, based on allocation, maximum,
need, and available tables kept in shared memory. If the request would leave the system in a safe state, it is granted, otherwise, the
request is added to that resource's wait queue, and that child enters a loop until it receives a "wake" message. Any time a process
releases resources, including termination when it releases all its resources, banker's and deadlock detection algorithms are called
on each waiting request in each queue. Any request that doesn't produce deadlock is granted, and OSS wakes the requesting process, all
other requests are put back in a wait queue.
	Any time OSS gets a request or grants it, it indicates this in output.log. It also periodically displays the allocation table,
and adds resource-related statistics at the end of the log file. If the verbose option is on, releases, terminations, and blocked requests 
are also displayed in the log.


Installation
	After download, navigate to the directory containing the source files. From the command line, enter "make".


Invocation
	From the directory containing the oss and user_proc executables:
./oss  		// runs operating system simulation
./oss -v	// runs simulation with verbose output


Version Control
	Git was used for version control. A full change log can be found at https://github.com/adwzq4/OS-Project-5/commits/master


MIT License

Copyright (c) 2020 Adam Wilson

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


